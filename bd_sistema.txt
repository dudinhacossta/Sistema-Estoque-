CREATE SCHEMA IF NOT EXISTS sistemaestoque DEFAULT CHARACTER SET utf8mb4;
USE sistemaestoque;

-- Criando a tabela de fornecedores (tb_fornecedores) primeiro, pois é referenciada pela tabela de produtos
CREATE TABLE tb_fornecedores (
  id INT(11) NOT NULL AUTO_INCREMENT,
  nome VARCHAR(100) DEFAULT NULL,
  cnpj VARCHAR(100) DEFAULT NULL,
  email VARCHAR(200) DEFAULT NULL,
  telefone VARCHAR(30) DEFAULT NULL,
  celular VARCHAR(30) DEFAULT NULL,
  cep VARCHAR(100) DEFAULT NULL,
  endereco VARCHAR(255) DEFAULT NULL,
  numero INT(11) DEFAULT NULL,
  complemento VARCHAR(200) DEFAULT NULL,
  bairro VARCHAR(100) DEFAULT NULL,
  cidade VARCHAR(100) DEFAULT NULL,
  estado VARCHAR(2) DEFAULT NULL,
  PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


SELECT * FROM tb_fornecedores;



CREATE TABLE tb_clientes (
  id INT(11) NOT NULL AUTO_INCREMENT,
  nome VARCHAR(100) DEFAULT NULL,
  rg VARCHAR(30) DEFAULT NULL,
  cpf VARCHAR(20) DEFAULT NULL,
  email VARCHAR(200) DEFAULT NULL,
  telefone VARCHAR(30) DEFAULT NULL,
  celular VARCHAR(30) DEFAULT NULL,
  cep VARCHAR(100) DEFAULT NULL,
  endereco VARCHAR(255) DEFAULT NULL,
  numero INT(11) DEFAULT NULL,
  complemento VARCHAR(200) DEFAULT NULL,
  bairro VARCHAR(100) DEFAULT NULL,
  cidade VARCHAR(100) DEFAULT NULL,
  estado VARCHAR(2) DEFAULT NULL,
  PRIMARY KEY (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


SELECT * FROM  tb_clientes;



CREATE TABLE tb_produtos (
  id INT(11) NOT NULL AUTO_INCREMENT,
  descricao VARCHAR(100) DEFAULT NULL,
  preco DECIMAL(10,2) DEFAULT NULL,
  qtd_estoque INT(11) DEFAULT NULL,
  for_id INT(11) DEFAULT NULL,
  PRIMARY KEY (id),
  KEY for_id (for_id),
  CONSTRAINT tb_produtos_ibfk_1 FOREIGN KEY (for_id) REFERENCES tb_fornecedores (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;



SELECT id, nome FROM tb_fornecedores;
SELECT * FROM tb_produtos;

SELECT p.id, p.descricao, p.preco, p.qtd_estoque, f.nome AS fornecedor
FROM tb_produtos AS p
INNER JOIN tb_fornecedores AS f ON p.for_id = f.id;



	CREATE TABLE tb_funcionarios (
	  id INT(11) NOT NULL AUTO_INCREMENT,
	  nome VARCHAR(100) DEFAULT NULL,
	  rg VARCHAR(30) DEFAULT NULL,
	  cpf VARCHAR(20) DEFAULT NULL,
	  email VARCHAR(200) DEFAULT NULL,
	  senha VARCHAR(10) DEFAULT NULL,
	  cargo VARCHAR(100) DEFAULT NULL,
	  nivel_acesso VARCHAR(50) DEFAULT NULL,
	  telefone VARCHAR(30) DEFAULT NULL,
	  celular VARCHAR(30) DEFAULT NULL,
	  cep VARCHAR(100) DEFAULT NULL,
	  endereco VARCHAR(255) DEFAULT NULL,
	  numero INT(11) DEFAULT NULL,
	  complemento VARCHAR(200) DEFAULT NULL,
	  bairro VARCHAR(100) DEFAULT NULL,
	  cidade VARCHAR(100) DEFAULT NULL,
	  estado VARCHAR(2) DEFAULT NULL,
	  PRIMARY KEY (id)
	) ENGINE=InnoDB DEFAULT CHARSET=utf8;



SELECT * FROM  tb_funcionarios;



CREATE TABLE tb_vendas (
  id INT(11) NOT NULL AUTO_INCREMENT,
  cliente_id INT(11) DEFAULT NULL,
  data_venda DATETIME DEFAULT NULL,
  total_venda DECIMAL(10,2) DEFAULT NULL,
  observacoes TEXT DEFAULT NULL,
  PRIMARY KEY (id),
  KEY cliente_id (cliente_id),
  CONSTRAINT tb_vendas_ibfk_1 FOREIGN KEY (cliente_id) REFERENCES tb_clientes (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


CREATE TABLE tb_parcelas (
  id INT(11) NOT NULL AUTO_INCREMENT,
  cliente_id INT(11) DEFAULT NULL,
  data_venda DATETIME DEFAULT NULL,
  total DECIMAL(10,2) DEFAULT NULL,
  parcela DECIMAL(10,2) DEFAULT NULL,
  obs VARCHAR(100) DEFAULT NULL,
  num_parcelas INT(11) DEFAULT NULL,
  PRIMARY KEY (id),
  KEY cliente_id (cliente_id),
  CONSTRAINT tb_parcelas_ibfk_1 FOREIGN KEY (cliente_id) REFERENCES tb_clientes (id)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

CREATE TABLE log_alteracoes_produtos (
  id_log INT AUTO_INCREMENT PRIMARY KEY,
  id_produto INT,
  preco_antigo DECIMAL(10, 2),
  preco_novo DECIMAL(10, 2),
  data_alteracao DATETIME,
  usuario_bd VARCHAR(100)
);


-- Mudamos o delimitador para que o MySQL não pare de ler no primeiro ';'
DELIMITER $$

CREATE TRIGGER tg_log_preco_produto
BEFORE UPDATE ON tb_produtos
FOR EACH ROW
BEGIN
    IF OLD.preco <> NEW.preco THEN
        INSERT INTO log_alteracoes_produtos (id_produto, preco_antigo, preco_novo, data_alteracao, usuario_bd)
        VALUES (
            OLD.id,
            OLD.preco,
            NEW.preco,
            NOW(),
            CURRENT_USER()
        );
    END IF;
END$$

DELIMITER ;


	SELECT 
		id_produto,
		preco_antigo,
		preco_novo,
		DATE_FORMAT(data_alteracao, '%d/%m/%Y %H:%i:%s') AS data_formatada
	FROM 
		log_alteracoes_produtos;
    



DELIMITER $$
CREATE PROCEDURE sp_inserir_fornecedor(
    IN p_nome VARCHAR(100),
    IN p_cnpj VARCHAR(20),
    IN p_email VARCHAR(100),
    IN p_telefone VARCHAR(20),
    IN p_celular VARCHAR(20),
    IN p_cep VARCHAR(10),
    IN p_endereco VARCHAR(100),
    IN p_numero INT,
    IN p_complemento VARCHAR(50),
    IN p_bairro VARCHAR(50),
    IN p_cidade VARCHAR(50),
    IN p_estado VARCHAR(2)
)
BEGIN
    INSERT INTO tb_fornecedores(nome, cnpj, email, telefone, celular, cep, endereco, numero, complemento, bairro, cidade, estado)
    VALUES(p_nome, p_cnpj, p_email, p_telefone, p_celular, p_cep, p_endereco, p_numero, p_complemento, p_bairro, p_cidade, p_estado);
END $$
DELIMITER ;


  
 
  SELECT * FROM tb_fornecedores;
  
  
INSERT INTO tb_fornecedores (nome, cnpj, email, telefone, celular, cep, endereco, numero, complemento, bairro, cidade, estado) VALUES
('L’Oréal Brasil', '34.206.322/0001-50', 'contato@loreal.com.br', '(11) 2345-6789', '(11) 91234-5678', '04567-000', 'Av. das Nações Unidas', 14000, 'Torre Sul', 'Brooklin', 'São Paulo', 'SP'),
('Natura Cosméticos', '71.821.820/0001-60', 'sac@natura.com.br', '(11) 4002-1771', '(11) 99876-5432', '06460-020', 'Rod. Anhanguera', 6000, 'Bloco 3', 'Centro Empresarial', 'Barueri', 'SP'),
('O Boticário', '76.543.210/0001-00', 'contato@boticario.com.br', '(41) 3200-1234', '(41) 99888-1122', '81350-100', 'Rua dos Perfumes', 125, NULL, 'Cidade Industrial', 'Curitiba', 'PR'),
('Avon Brasil', '56.789.123/0001-90', 'sac@avon.com.br', '(11) 3800-2000', '(11) 98765-4321', '05038-001', 'Av. Henry Ford', 500, NULL, 'Jaguaré', 'São Paulo', 'SP'),
('Quem Disse, Berenice?', '12.345.678/0001-00', 'contato@quemdisseberenice.com.br', '(11) 3333-4444', '(11) 99999-8888', '01030-100', 'Rua da Beleza', 300, 'Loja 5', 'Centro', 'São Paulo', 'SP'),
('Maybelline NY Brasil', '23.456.789/0001-11', 'sac@maybelline.com.br', '(21) 3003-1234', '(21) 91234-5678', '20031-170', 'Av. Rio Branco', 1, 'Sala 101', 'Centro', 'Rio de Janeiro', 'RJ');


INSERT INTO tb_produtos (descricao, preco, qtd_estoque, for_id) VALUES
('Shampoo Reconstrução Capilar', 19.90, 50, 1),
('Condicionador Hidratação Intensa', 21.50, 40, 2),
('Creme para Mãos Karité', 15.00, 30, 3),
('Perfume Floratta Blue 100ml', 79.99, 25, 3),
('Sabonete Líquido de Lavanda', 9.50, 100, 4),
('Batom Matte Vermelho Rubi', 29.90, 60, 5),
('Base Líquida Bege Claro', 39.90, 35, 6);

-- Remove a tabela de produtos primeiro devido à dependência da chave estrangeira
DROP TABLE IF EXISTS tb_produtos;

-- Em seguida, remove a tabela de fornecedores
DROP TABLE IF EXISTS tb_fornecedores;